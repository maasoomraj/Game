{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as firebase from \"firebase/app\";\n\nrequire(\"firebase/auth\");\n\nrequire(\"firebase/database\");\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.login = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.email && _this.state.password)) {\n                _context.next = 24;\n                break;\n              }\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password));\n\n            case 5:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate(\"LoadingScreen\");\n              }\n\n              _context.next = 22;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                isLoading: false\n              });\n\n              if (!(_context.t0.code == \"auth/invalid-email\")) {\n                _context.next = 15;\n                break;\n              }\n\n              alert(\"Enter valid email-address\");\n              return _context.abrupt(\"return\");\n\n            case 15:\n              if (!(_context.t0.code == \"auth/user-not-found\")) {\n                _context.next = 18;\n                break;\n              }\n\n              alert(\"User doesnot exists. SignUp first\");\n              return _context.abrupt(\"return\");\n\n            case 18:\n              if (!(_context.t0.message == \"The password is invalid or the user does not have a password.\")) {\n                _context.next = 21;\n                break;\n              }\n\n              alert(\"Password is wrong\");\n              return _context.abrupt(\"return\");\n\n            case 21:\n              alert(\"Problem in signing user. Please try again.\");\n\n            case 22:\n              _context.next = 25;\n              break;\n\n            case 24:\n              alert(\"Enter email id and password\");\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 9]], Promise);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: StatusBar.currentHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          marginVertical: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.email,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Enter email address\",\n        style: {\n          color: \"#000\",\n          fontSize: 18,\n          height: 50,\n          borderRadius: 10,\n          marginHorizontal: 20,\n          paddingHorizontal: 15,\n          marginBottom: 20,\n          borderWidth: 0.2,\n          borderColor: \"#c4c4c4\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        secureTextEntry: true,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Enter your password\",\n        style: {\n          color: \"#000\",\n          fontSize: 18,\n          height: 50,\n          borderRadius: 10,\n          marginHorizontal: 20,\n          paddingHorizontal: 15,\n          marginBottom: 20,\n          borderWidth: 0.2,\n          borderColor: \"#c4c4c4\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 10,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: 100,\n          height: 50,\n          borderRadius: 13,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderWidth: 0.3,\n          borderColor: \"#000\"\n        },\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, \"Login\")))), React.createElement(View, {\n        style: {\n          height: 50,\n          marginBottom: 30,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, \"Create an account - \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"SignUpScreen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/LoginScreen.js"],"names":["React","Component","firebase","require","LoginScreen","props","login","state","email","password","setState","isLoading","auth","signInWithEmailAndPassword","response","navigation","navigate","code","alert","message","flex","marginTop","StatusBar","currentHeight","marginVertical","text","color","fontSize","height","borderRadius","marginHorizontal","paddingHorizontal","marginBottom","borderWidth","borderColor","alignItems","justifyContent","width","flexDirection","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StatusBar,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport * as firebase from \"firebase/app\";\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\n\nexport default class LoginScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoading: false,\n    };\n  }\n\n  login = async () => {\n    if (this.state.email && this.state.password) {\n      this.setState({ isLoading: true });\n      try {\n        const response = await firebase\n          .auth()\n          .signInWithEmailAndPassword(this.state.email, this.state.password);\n\n        if (response) {\n          this.props.navigation.navigate(\"LoadingScreen\");\n        }\n      } catch (error) {\n        this.setState({ isLoading: false });\n        if (error.code == \"auth/invalid-email\") {\n          alert(\"Enter valid email-address\");\n          return;\n        }\n        if (error.code == \"auth/user-not-found\") {\n          alert(\"User doesnot exists. SignUp first\");\n          return;\n        }\n        if (\n          error.message ==\n          \"The password is invalid or the user does not have a password.\"\n        ) {\n          alert(\"Password is wrong\");\n          return;\n        }\n        alert(\"Problem in signing user. Please try again.\");\n      }\n    } else {\n      alert(\"Enter email id and password\");\n    }\n  };\n\n  render() {\n    return (\n      <View style={{ flex: 1, marginTop: StatusBar.currentHeight }}>\n        <View style={{ flex: 1, marginVertical: 40 }}>\n          <TextInput\n            value={this.state.email}\n            keyboardType=\"email-address\"\n            onChangeText={(text) => this.setState({ email: text })}\n            placeholder=\"Enter email address\"\n            style={{\n              color: \"#000\",\n              fontSize: 18,\n              height: 50,\n              borderRadius: 10,\n              marginHorizontal: 20,\n              paddingHorizontal: 15,\n              marginBottom: 20,\n              borderWidth: 0.2,\n              borderColor: \"#c4c4c4\",\n            }}\n          />\n          <TextInput\n            secureTextEntry\n            value={this.state.password}\n            onChangeText={(text) => this.setState({ password: text })}\n            placeholder=\"Enter your password\"\n            style={{\n              color: \"#000\",\n              fontSize: 18,\n              height: 50,\n              borderRadius: 10,\n              marginHorizontal: 20,\n              paddingHorizontal: 15,\n              marginBottom: 20,\n              borderWidth: 0.2,\n              borderColor: \"#c4c4c4\",\n            }}\n          />\n          <View\n            style={{\n              marginTop: 10,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: 100,\n                height: 50,\n                borderRadius: 13,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderWidth: 0.3,\n                borderColor: \"#000\",\n              }}\n              onPress={this.login}\n            >\n              <Text>Login</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View\n          style={{\n            height: 50,\n            marginBottom: 30,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Text>Create an account - </Text>\n          <TouchableOpacity\n            onPress={() => this.props.navigation.navigate(\"SignUpScreen\")}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>Sign Up</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}