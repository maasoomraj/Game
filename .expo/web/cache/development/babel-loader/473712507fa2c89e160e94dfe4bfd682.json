{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/StartGame.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { snapshotToArray } from \"../helpers/snapshot\";\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/auth\");\nimport(\"firebase/database\");\n\nvar StartGame = function (_Component) {\n  _inherits(StartGame, _Component);\n\n  var _super = _createSuper(StartGame);\n\n  function StartGame(props) {\n    var _this;\n\n    _classCallCheck(this, StartGame);\n\n    _this = _super.call(this, props);\n\n    _this.orderPlayers = function () {\n      var array = [];\n      var playersMap = new Map();\n\n      for (var i in _this.state.players) {\n        if (!playersMap.has(_this.state.players[i].userKey)) {\n          array.push(_this.state.players[i]);\n          playersMap.set(_this.state.players[i].userKey, 1);\n        }\n      }\n\n      console.log(\"players \");\n      console.log(playersMap);\n\n      _this.setState({\n        players: array\n      });\n    };\n\n    _this.receive = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"game\").child(_this.state.gameID).child(\"players\").on(\"child_added\", function (snapshot) {\n                _this.setState({\n                  players: [].concat(_toConsumableArray(_this.state.players), [snapshot.val()])\n                });\n              }));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"ERROR 1 \" + _context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this.update = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"game\").child(_this.state.gameID).child(\"players\").on(\"child_changed\", function (snapshot) {\n                var playersList = _this.state.players;\n\n                for (var i in playersList) {\n                  if (playersList[i].userKey === snapshot.val().userKey) {\n                    playersList[i].ready = snapshot.val().ready;\n                  }\n                }\n\n                _this.setState({\n                  players: playersList\n                });\n              }));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              alert(\"ERROR 2 \" + _context2.t0);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this.toggleReady = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (!_this.state.ready) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"game\").child(_this.state.gameID).child(\"players\").child(_this.state.playerID).update({\n                ready: false\n              }, function () {\n                _this.setState({\n                  ready: false\n                });\n              }));\n\n            case 4:\n              _context3.next = 8;\n              break;\n\n            case 6:\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"game\").child(_this.state.gameID).child(\"players\").child(_this.state.playerID).update({\n                ready: true\n              }, function () {\n                _this.setState({\n                  ready: true\n                });\n              }));\n\n            case 8:\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              alert(\"ERROR 3 \" + _context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.playerDisplay = function (item, index) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, item.name), item.ready ? React.createElement(Text, {\n        style: {\n          color: \"#6AC955\",\n          borderColor: \"#000\",\n          borderWidth: 0.1,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, \"\\u2713\") : null);\n    };\n\n    _this.state = {\n      name: \"\",\n      userKey: \"\",\n      admin: \"\",\n      gameID: \"\",\n      players: [],\n      ready: false\n    };\n    return _this;\n  }\n\n  _createClass(StartGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation, name, userKey, admin, gameID, playerID, players;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              navigation = this.props.navigation;\n              name = navigation.getParam(\"name\");\n              userKey = navigation.getParam(\"userKey\");\n              admin = navigation.getParam(\"admin\");\n              gameID = navigation.getParam(\"gameID\");\n              playerID = navigation.getParam(\"playerID\");\n              players = navigation.getParam(\"players\") || [];\n              this.setState({\n                name: name,\n                userKey: userKey,\n                admin: admin,\n                gameID: gameID,\n                players: players,\n                playerID: playerID\n              }, function () {\n                _this2.receive();\n\n                _this2.update();\n\n                _this2.orderPlayers();\n              });\n              BackHandler.addEventListener(\"hardwareBackPress\", function () {\n                return _this2.props.navigation.navigate(\"GameSelect\");\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          marginTop: StatusBar.currentHeight,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 20,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 100,\n          borderBottomColor: \"#000\",\n          borderBottomWidth: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, \" \", \"Let's Chat !\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          margin: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.players,\n        renderItem: function renderItem(_ref, index) {\n          var item = _ref.item;\n          return _this3.playerDisplay(item, index);\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.toggleReady,\n        style: {\n          borderRadius: 20,\n          width: 100,\n          height: 50,\n          backgroundColor: \"#F0B342\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"700\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, this.state.ready ? \"Cancel\" : \"Ready\")))));\n    }\n  }]);\n\n  return StartGame;\n}(Component);\n\nexport { StartGame as default };","map":{"version":3,"sources":["/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/StartGame.js"],"names":["React","Component","snapshotToArray","firebase","StartGame","props","orderPlayers","array","playersMap","Map","i","state","players","has","userKey","push","set","console","log","setState","receive","database","ref","child","gameID","on","snapshot","val","alert","update","playersList","ready","toggleReady","playerID","playerDisplay","item","index","flexDirection","name","color","borderColor","borderWidth","fontWeight","admin","navigation","getParam","BackHandler","addEventListener","navigate","marginTop","StatusBar","currentHeight","flex","margin","justifyContent","alignItems","height","borderBottomColor","borderBottomWidth","fontSize","toString","borderRadius","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  BackHandler,\n  StatusBar,\n  TextInput,\n  TouchableOpacity,\n  Dimensions,\n  FlatList,\n} from \"react-native\";\n\nimport { snapshotToArray } from \"../helpers/snapshot\";\n\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/auth\");\nimport(\"firebase/database\");\n\nexport default class StartGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      userKey: \"\",\n      admin: \"\",\n      gameID: \"\",\n      players: [],\n      ready: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { navigation } = this.props;\n    const name = navigation.getParam(\"name\");\n    const userKey = navigation.getParam(\"userKey\");\n    const admin = navigation.getParam(\"admin\");\n    const gameID = navigation.getParam(\"gameID\");\n    const playerID = navigation.getParam(\"playerID\");\n    const players = navigation.getParam(\"players\") || [];\n\n    this.setState(\n      {\n        name,\n        userKey,\n        admin,\n        gameID,\n        players,\n        playerID,\n      },\n      () => {\n        this.receive();\n        this.update();\n        this.orderPlayers();\n      }\n    );\n\n    BackHandler.addEventListener(\"hardwareBackPress\", () =>\n      this.props.navigation.navigate(\"GameSelect\")\n    );\n  }\n\n  // async componentWillUnmount() {\n  //   try {\n  //     await firebase.database().ref(`users`).child(this.state.userKey).remove();\n  //   } catch (error) {\n  //     alert(\"ERROR 3 \" + error);\n  //   }\n  // }\n\n  orderPlayers = () => {\n    let array = [];\n    let playersMap = new Map();\n    for (let i in this.state.players) {\n      if (!playersMap.has(this.state.players[i].userKey)) {\n        array.push(this.state.players[i]);\n        playersMap.set(this.state.players[i].userKey, 1);\n      }\n    }\n\n    console.log(\"players \");\n    console.log(playersMap);\n    this.setState({ players: array });\n  };\n\n  receive = async () => {\n    try {\n      await firebase\n        .database()\n        .ref(\"game\")\n        .child(this.state.gameID)\n        .child(\"players\")\n        .on(\"child_added\", (snapshot) => {\n          this.setState({ players: [...this.state.players, snapshot.val()] });\n        });\n    } catch (error) {\n      alert(\"ERROR 1 \" + error);\n    }\n  };\n\n  update = async () => {\n    try {\n      await firebase\n        .database()\n        .ref(\"game\")\n        .child(this.state.gameID)\n        .child(\"players\")\n        .on(\"child_changed\", (snapshot) => {\n          let playersList = this.state.players;\n          for (let i in playersList) {\n            if (playersList[i].userKey === snapshot.val().userKey) {\n              playersList[i].ready = snapshot.val().ready;\n            }\n          }\n          this.setState({ players: playersList });\n        });\n    } catch (error) {\n      alert(\"ERROR 2 \" + error);\n    }\n  };\n\n  toggleReady = async () => {\n    try {\n      if (this.state.ready) {\n        await firebase\n          .database()\n          .ref(\"game\")\n          .child(this.state.gameID)\n          .child(\"players\")\n          .child(this.state.playerID)\n          .update(\n            {\n              ready: false,\n            },\n            () => {\n              this.setState({ ready: false });\n            }\n          );\n      } else {\n        await firebase\n          .database()\n          .ref(\"game\")\n          .child(this.state.gameID)\n          .child(\"players\")\n          .child(this.state.playerID)\n          .update(\n            {\n              ready: true,\n            },\n            () => {\n              this.setState({ ready: true });\n            }\n          );\n      }\n    } catch (error) {\n      alert(\"ERROR 3 \" + error);\n    }\n  };\n\n  // sendMessage = async () => {\n  //   try {\n  //     const key = await firebase.database().ref(\"messages\").push().key;\n  //     await firebase\n  //       .database()\n  //       .ref(\"messages\")\n  //       .child(key)\n  //       .set(\n  //         {\n  //           message: this.state.myMessage,\n  //           name: this.state.name,\n  //           userKey: this.state.userKey,\n  //         },\n  //         () => this.setState({ myMessage: \"\" })\n  //       );\n  //   } catch (error) {\n  //     alert(\"ERROR 2 \" + error);\n  //   }\n  // };\n\n  // messageDisplay = (item, index) => {\n  //   return item.userKey === this.state.userKey ? (\n  //     <View\n  //       style={{\n  //         borderWidth: 0.4,\n  //         borderColor: \"#c4c4c4\",\n  //         minHeight: 50,\n  //         paddingHorizontal: 20,\n  //         paddingVertical: 10,\n  //         marginLeft: 120,\n  //         backgroundColor: \"#C7F6B6\",\n  //         marginBottom: 20,\n  //       }}\n  //     >\n  //       <Text style={{ color: \"#000\", fontSize: 14 }}>{item.message}</Text>\n  //     </View>\n  //   ) : (\n  //     <View>\n  //       <Text style={{ marginBottom: 3, fontSize: 12, fontWeight: \"500\" }}>\n  //         {item.name}\n  //       </Text>\n  //       <View\n  //         style={{\n  //           borderWidth: 0.4,\n  //           borderColor: \"#c4c4c4\",\n  //           minHeight: 50,\n  //           paddingHorizontal: 20,\n  //           paddingVertical: 10,\n  //           marginRight: 120,\n  //           marginBottom: 20,\n  //           backgroundColor: \"#ADD8E6\",\n  //         }}\n  //       >\n  //         <Text style={{ color: \"#000\", fontSize: 14 }}>{item.message}</Text>\n  //       </View>\n  //     </View>\n  //   );\n  // };\n\n  playerDisplay = (item, index) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Text>{item.name}</Text>\n        {item.ready ? (\n          <Text\n            style={{\n              color: \"#6AC955\",\n              borderColor: \"#000\",\n              borderWidth: 0.1,\n              fontWeight: \"bold\",\n            }}\n          >\n            ✓\n          </Text>\n        ) : null}\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <View style={{ marginTop: StatusBar.currentHeight, flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: 100,\n            borderBottomColor: \"#000\",\n            borderBottomWidth: 0.5,\n          }}\n        >\n          <Text style={{ fontSize: 24, fontWeight: \"bold\" }}>\n            {\" \"}\n            Let's Chat !\n          </Text>\n        </View>\n\n        <View style={{ flex: 1, margin: 20 }}>\n          <FlatList\n            data={this.state.players}\n            renderItem={({ item }, index) => this.playerDisplay(item, index)}\n            keyExtractor={(item, index) => index.toString()}\n          />\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            <TouchableOpacity\n              onPress={this.toggleReady}\n              style={{\n                borderRadius: 20,\n                width: 100,\n                height: 50,\n                backgroundColor: \"#F0B342\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ fontSize: 18, fontWeight: \"700\" }}>\n                {this.state.ready ? \"Cancel\" : \"Ready\"}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {/* <View\n          style={{\n            margin: 20,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            value={this.state.myMessage}\n            onChangeText={(text) => this.setState({ myMessage: text })}\n            style={{\n              height: 50,\n              width: Dimensions.get(\"window\").width - 80,\n              borderColor: \"#c4c4c4\",\n              borderWidth: 0.5,\n              borderRadius: 15,\n              paddingHorizontal: 10,\n            }}\n          />\n          <TouchableOpacity\n            style={{\n              width: 45,\n              height: 45,\n              borderRadius: 25,\n              backgroundColor: \"#377C1C\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginLeft: 10,\n            }}\n            onPress={this.sendMessage}\n          >\n            <Text style={{ fontSize: 20 }}>→</Text>\n          </TouchableOpacity>\n        </View> */}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}