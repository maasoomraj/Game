{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/LoadingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { MaterialIndicator } from \"react-native-indicators\";\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/database\");\nimport(\"firebase/auth\");\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      YellowBox.ignoreWarnings([\"Setting a timer\"]);\n\n      _this.checkIfLoggedIn();\n    };\n\n    _this.checkIfLoggedIn = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                  _this.props.navigation.navigate(\"GameSelect\", {\n                    user: {\n                      name: user.providerData[0].displayName,\n                      key: user.uid,\n                      email: user.providerData[0].email\n                    }\n                  });\n                } else {\n                  _this.props.navigation.navigate(\"SignUpScreen\");\n                }\n              }));\n\n            case 2:\n              _this.unsubscribe = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(MaterialIndicator, {\n        color: \"#2e424d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nexport { LoadingScreen as default };","map":{"version":3,"sources":["/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/LoadingScreen.js"],"names":["React","Component","MaterialIndicator","firebase","LoadingScreen","props","componentDidMount","YellowBox","ignoreWarnings","checkIfLoggedIn","auth","onAuthStateChanged","user","navigation","navigate","name","providerData","displayName","key","uid","email","unsubscribe","state","flex"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,mBAAP;AACA,OAAO,eAAP;;IAEqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,iBAPmB,GAOC,YAAM;AACxBC,MAAAA,SAAS,CAACC,cAAV,CAAyB,CAAC,iBAAD,CAAzB;;AAEA,YAAKC,eAAL;AACD,KAXkB;;AAAA,UAanBA,eAbmB,GAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSN,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AACpE,oBAAIA,IAAJ,EAAU;AACR,wBAAKP,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAC3CF,oBAAAA,IAAI,EAAE;AACJG,sBAAAA,IAAI,EAAEH,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqBC,WADvB;AAEJC,sBAAAA,GAAG,EAAEN,IAAI,CAACO,GAFN;AAGJC,sBAAAA,KAAK,EAAER,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqBI;AAHxB;AADqC,mBAA7C;AAOD,iBARD,MAQO;AACL,wBAAKf,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,cAA/B;AACD;AACF,eAZwB,CADT;;AAAA;AAChB,oBAAKO,WADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbC;;AAEjB,UAAKC,KAAL,GAAa;AACXV,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;6BAkCQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;;;EAhDwCtB,S;;SAAtBG,a","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StatusBar, YellowBox } from \"react-native\";\nimport { MaterialIndicator } from \"react-native-indicators\";\n\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/database\");\nimport(\"firebase/auth\");\n\nexport default class LoadingScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n    };\n  }\n\n  componentDidMount = () => {\n    YellowBox.ignoreWarnings([\"Setting a timer\"]);\n\n    this.checkIfLoggedIn();\n  };\n\n  checkIfLoggedIn = async () => {\n    this.unsubscribe = await firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.props.navigation.navigate(\"GameSelect\", {\n          user: {\n            name: user.providerData[0].displayName,\n            key: user.uid,\n            email: user.providerData[0].email,\n          },\n        });\n      } else {\n        this.props.navigation.navigate(\"SignUpScreen\");\n      }\n    });\n  };\n\n  //   setUser = async (user) => {\n  //     const userFromDB = await firebase\n  //       .database()\n  //       .ref(\"users\")\n  //       .child(user.uid)\n  //       .once(\"value\");\n  //     this.setState({ user: userFromDB.val() });\n  //     console.log(userFromDB);\n  //   };\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1 }}>\n          <MaterialIndicator color={\"#2e424d\"} />\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}