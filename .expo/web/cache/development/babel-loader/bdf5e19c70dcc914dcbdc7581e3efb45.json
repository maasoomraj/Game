{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/StartGame.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { snapshotToArray } from \"../helpers/snapshot\";\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/auth\");\nimport(\"firebase/database\");\n\nvar StartGame = function (_Component) {\n  _inherits(StartGame, _Component);\n\n  var _super = _createSuper(StartGame);\n\n  function StartGame(props) {\n    var _this;\n\n    _classCallCheck(this, StartGame);\n\n    _this = _super.call(this, props);\n\n    _this.receive = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.playerDisplay = function (item, index) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, item.name));\n    };\n\n    _this.state = {\n      name: \"\",\n      userKey: \"\",\n      admin: \"\",\n      gameID: \"\",\n      players: []\n    };\n    return _this;\n  }\n\n  _createClass(StartGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation, name, userKey, admin, gameID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              navigation = this.props.navigation;\n              name = navigation.getParam(\"name\");\n              userKey = navigation.getParam(\"userKey\");\n              admin = navigation.getParam(\"admin\");\n              gameID = navigation.getParam(\"gameID\");\n              console.log(name, userKey, admin, gameID);\n              this.setState({\n                name: name,\n                userKey: userKey,\n                admin: admin,\n                gameID: gameID\n              });\n              _context2.prev = 7;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"game/\" + \"-MBXWbkyyF8spzbhcp\" + \"/players\").on(\"child_added\", function (snapshot) {\n                console.log(\"receive\");\n                console.log(snapshot);\n\n                _this2.setState({\n                  players: [].concat(_toConsumableArray(_this2.state.players), [snapshot.val()])\n                });\n              }));\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](7);\n              alert(\"ERROR 1 \" + _context2.t0);\n\n            case 15:\n              BackHandler.addEventListener(\"hardwareBackPress\", function () {\n                return _this2.props.navigation.navigate(\"WelcomeScreen\");\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[7, 12]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          marginTop: StatusBar.currentHeight,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 20,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: 100,\n          borderBottomColor: \"#000\",\n          borderBottomWidth: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \" \", \"Let's Chat !\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          margin: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.players,\n        renderItem: function renderItem(_ref, index) {\n          var item = _ref.item;\n          return _this3.playerDisplay(item, index);\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return StartGame;\n}(Component);\n\nexport { StartGame as default };","map":{"version":3,"sources":["/Users/masoomraj/Documents/summer/ReactNative/Game/Game/screens/StartGame.js"],"names":["React","Component","snapshotToArray","firebase","StartGame","props","receive","playerDisplay","item","index","name","state","userKey","admin","gameID","players","navigation","getParam","console","log","setState","database","ref","on","snapshot","val","alert","BackHandler","addEventListener","navigate","marginTop","StatusBar","currentHeight","flex","margin","justifyContent","alignItems","height","borderBottomColor","borderBottomWidth","fontSize","fontWeight","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  BackHandler,\n  StatusBar,\n  TextInput,\n  TouchableOpacity,\n  Dimensions,\n  FlatList,\n} from \"react-native\";\n\nimport { snapshotToArray } from \"../helpers/snapshot\";\n\nimport * as firebase from \"firebase/app\";\nimport(\"firebase/auth\");\nimport(\"firebase/database\");\n\nexport default class StartGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      userKey: \"\",\n      admin: \"\",\n      gameID: \"\",\n      players: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { navigation } = this.props;\n    const name = navigation.getParam(\"name\");\n    const userKey = navigation.getParam(\"userKey\");\n    const admin = navigation.getParam(\"admin\");\n    const gameID = navigation.getParam(\"gameID\");\n\n    console.log(name, userKey, admin, gameID);\n\n    this.setState({\n      name,\n      userKey,\n      admin,\n      gameID,\n    });\n\n    try {\n      await firebase\n        .database()\n        .ref(\"game/\" + \"-MBXWbkyyF8spzbhcp\" + \"/players\")\n        // .child(JSON.parse(JSON.stringify(this.state.gameID)))\n        // .child(\"players\")\n        .on(\"child_added\", (snapshot) => {\n          console.log(\"receive\");\n          console.log(snapshot);\n          this.setState({ players: [...this.state.players, snapshot.val()] });\n        });\n      // const array = await firebase\n      //   .database()\n      //   .ref(\"game/\" + this.state.gameID + \"/players\")\n      //   // .child(JSON.parse(JSON.stringify(this.state.gameID)))\n      //   // .child(\"players\")\n      //   .once(\"value\");\n      // const array2 = snapshotToArray(array);\n      // console.log(array2);\n      // this.setState({ players: array2 });\n    } catch (error) {\n      alert(\"ERROR 1 \" + error);\n    }\n\n    BackHandler.addEventListener(\"hardwareBackPress\", () =>\n      this.props.navigation.navigate(\"WelcomeScreen\")\n    );\n  }\n\n  // async componentWillUnmount() {\n  //   try {\n  //     await firebase.database().ref(`users`).child(this.state.userKey).remove();\n  //   } catch (error) {\n  //     alert(\"ERROR 3 \" + error);\n  //   }\n  // }\n\n  receive = async () => {};\n\n  // sendMessage = async () => {\n  //   try {\n  //     const key = await firebase.database().ref(\"messages\").push().key;\n  //     await firebase\n  //       .database()\n  //       .ref(\"messages\")\n  //       .child(key)\n  //       .set(\n  //         {\n  //           message: this.state.myMessage,\n  //           name: this.state.name,\n  //           userKey: this.state.userKey,\n  //         },\n  //         () => this.setState({ myMessage: \"\" })\n  //       );\n  //   } catch (error) {\n  //     alert(\"ERROR 2 \" + error);\n  //   }\n  // };\n\n  // messageDisplay = (item, index) => {\n  //   return item.userKey === this.state.userKey ? (\n  //     <View\n  //       style={{\n  //         borderWidth: 0.4,\n  //         borderColor: \"#c4c4c4\",\n  //         minHeight: 50,\n  //         paddingHorizontal: 20,\n  //         paddingVertical: 10,\n  //         marginLeft: 120,\n  //         backgroundColor: \"#C7F6B6\",\n  //         marginBottom: 20,\n  //       }}\n  //     >\n  //       <Text style={{ color: \"#000\", fontSize: 14 }}>{item.message}</Text>\n  //     </View>\n  //   ) : (\n  //     <View>\n  //       <Text style={{ marginBottom: 3, fontSize: 12, fontWeight: \"500\" }}>\n  //         {item.name}\n  //       </Text>\n  //       <View\n  //         style={{\n  //           borderWidth: 0.4,\n  //           borderColor: \"#c4c4c4\",\n  //           minHeight: 50,\n  //           paddingHorizontal: 20,\n  //           paddingVertical: 10,\n  //           marginRight: 120,\n  //           marginBottom: 20,\n  //           backgroundColor: \"#ADD8E6\",\n  //         }}\n  //       >\n  //         <Text style={{ color: \"#000\", fontSize: 14 }}>{item.message}</Text>\n  //       </View>\n  //     </View>\n  //   );\n  // };\n\n  playerDisplay = (item, index) => {\n    return (\n      <View>\n        <Text>{item.name}</Text>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <View style={{ marginTop: StatusBar.currentHeight, flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: 100,\n            borderBottomColor: \"#000\",\n            borderBottomWidth: 0.5,\n          }}\n        >\n          <Text style={{ fontSize: 24, fontWeight: \"bold\" }}>\n            {\" \"}\n            Let's Chat !\n          </Text>\n        </View>\n\n        <View style={{ flex: 1, margin: 20 }}>\n          <FlatList\n            data={this.state.players}\n            renderItem={({ item }, index) => this.playerDisplay(item, index)}\n            keyExtractor={(item, index) => index.toString()}\n          />\n        </View>\n\n        {/* <View\n          style={{\n            margin: 20,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            value={this.state.myMessage}\n            onChangeText={(text) => this.setState({ myMessage: text })}\n            style={{\n              height: 50,\n              width: Dimensions.get(\"window\").width - 80,\n              borderColor: \"#c4c4c4\",\n              borderWidth: 0.5,\n              borderRadius: 15,\n              paddingHorizontal: 10,\n            }}\n          />\n          <TouchableOpacity\n            style={{\n              width: 45,\n              height: 45,\n              borderRadius: 25,\n              backgroundColor: \"#377C1C\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginLeft: 10,\n            }}\n            onPress={this.sendMessage}\n          >\n            <Text style={{ fontSize: 20 }}>→</Text>\n          </TouchableOpacity>\n        </View> */}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}